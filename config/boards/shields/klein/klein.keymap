/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NAV  1
#define NUM  2
#define FUN  3
#define SYM  4
#define MEDIA  5
#define BLU 6

&mt {
  quick-tap-ms = <125>;
  global-quick-tap;
  flavor = "tap-preferred";
  tapping-term-ms = <200>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {

            bindings = <
&mt LC(S) Q    &mt LC(A) W           &mt LC(C) F     &mt LC(V)  P     &mt K_CONTEXT_MENU B           &kp J                       &kp L          &kp U          &kp Y          &kp SQT
&mt LGUI A     &mt LALT R            &mt LCTRL S     &mt LSHFT T     &mt LC(E)  G                   &mt K_CONTEXT_MENU  M        &mt RSHFT N    &mt RCTRL E    &mt RALT I     &mt LGUI O
&kp Z          &mt ESC X             &mt INSERT C    &mt LC(U) D    &mt LC(J) V                    &kp K    &kp H                 &kp COMMA      &kp DOT        &kp FSLH
&lt FUN DEL   &lt SYM RET  &lt  NUM SPACE  &lt BLU  K_CONTEXT_MENU             &lt BLU K_CONTEXT_MENU  &lt SYM BKSP    &lt NAV  TAB   &lt FUN ESC
            >;
        sensor-bindings = <&inc_dec_kp  LC(PG_UP) LC(PG_DN)  &inc_dec_kp LC(Z) LC(Y)>;
        };

        nav_layer {

            bindings = <
&trans         &kp PG_UP        &kp UP           &kp PG_DN          &trans                &trans        &kp PG_UP       &kp UP       &kp PG_DN    &trans
&mt LGUI HOME  &mt LALT LEFT    &mt LCTRL DOWN   &mt LSHFT RIGHT    &kp END                  &kp HOME         &kp LEFT       &kp DOWN     &kp RIGHT     &kp END
&trans         &kp PG_UP        &kp DOWN         &kp PG_DN         &trans                   &trans           &kp PG_UP      &kp DOWN     &kp PG_DN     &trans
&trans         &trans         &trans         &bootloader                                           &trans     &trans         &trans         &trans
            >;
        sensor-bindings = <&inc_dec_kp LEFT RIGHT &inc_dec_kp UP DOWN>;
        };

        num_layer {
            
            bindings = <
&kp LBKT       &kp N7         &kp N8         &kp N9         &mt N0  RBKT            &trans         &kp N7         &kp N8         &kp N9          &trans
&mt LGUI SEMI  &mt LALT N4    &mt LCTRL N5   &mt LSHFT N6   &kp EQUAL               &trans         &mt RSHFT N4   &mt RCTRL N5   &mt RALT N6     &kp LGUI
&kp GRAVE      &kp N1         &kp N2         &kp N3         &mt LGUI BSLH           &caps_word     &kp N1         &kp N2         &kp N3          &trans
&kp PERIOD     &kp N0         &kp MINUS      &bootloader                                       &bootloader   &kp MINUS         &kp N0          &kp PERIOD
            >;
        sensor-bindings = <&inc_dec_kp UP DOWN>;
        };

        fun_layer {
            
            bindings = <
&kp F12        &kp F7         &kp F8         &kp F9         &kp PSCRN          &kp F12        &kp F7         &kp F8         &kp F9           &trans
&mt LGUI F11   &mt LALT F4    &mt LCTRL F5   &mt LSHFT F6   &kp SYSREQ          &kp F11        &mt RSHFT F4   &mt RCTRL F5   &mt RALT F6      &kp LGUI
&kp F10        &kp F1         &kp F2         &kp F3         &kp PAUSE_BREAK     &kp F10        &kp F1         &kp F2         &kp F3          &trans
&trans         &trans         &trans       &bootloader                                       &bootloader    &trans         &trans         &trans
            >;
        sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        sym_layer {
            
            bindings = <
&kp LS(LBKT)   &kp LS(N7)     &kp LS(N8)     &kp LS(N9)     &kp LS(RBKT)        &trans         &trans                &trans            &trans         &trans
&kp LS(SEMI)   &kp LS(N4)     &kp LS(N5)     &kp LS(N6)     &kp LS(EQUAL)       &trans         &mt LSHFT LS(SEMI)    &mt LCTRL EQUAL   &kp LALT       &mt LGUI SEMI
&kp LS(GRAVE)  &kp LS(N1)     &kp LS(N2)     &kp LS(N3)     &kp LS(BSLH)        &caps_word         &trans                &trans            &trans         &trans
&kp LS(PERIOD) &kp LS(N0)     &kp LS(MINUS)  &bootloader                                       &bootloader            &trans            &trans         &trans
            >;
        sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        media_layer {
            
            bindings = <
&trans         &trans         &trans         &trans         &trans              &trans         &trans         &trans         &trans         &trans
&kp LGUI       &kp LALT       &kp LCTRL      &kp LSHFT      &trans              &kp K_PREV     &kp K_VOL_DN   &kp K_VOL_UP   &kp K_NEXT     &trans
&trans         &trans         &trans         &trans         &trans              &trans         &trans         &trans         &trans         &trans
&trans         &trans         &trans         &bootloader                                       &bootloader    &kp K_STOP2    &kp K_PP       &kp K_MUTE
            >;
        sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        blu_layer {
            
            bindings = <
&trans         &trans         &trans         &trans         &bt BT_CLR              &bt BT_CLR     &trans         &trans         &trans         &trans
&trans         &bt BT_SEL 3   &bt BT_SEL 4   &trans         &bt BT_SEL 1            &bt BT_SEL 1         &bt BT_PRV     &bt BT_NXT     &trans         &trans
&trans         &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 0             &bt BT_SEL 0        &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2          &trans
&trans         &trans         &trans         &trans         &trans                             &trans         &trans         &trans         &trans
            >;
        sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };
    };
};
 
